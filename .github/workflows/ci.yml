name: ci

run-name: Continuous integration

on: [push]

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Set up Node.js and npm
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies using npm
        run: npm ci

      - name: Check the formatting
        run: npm run format:check

      - name: Run the linter
        run: npm run lint

  unit_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Set up Node.js and npm
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies using npm
        run: npm ci

      - name: Run unit tests using Jest
        run: npm run test:ci

  # Based on https://playwright.dev/docs/ci#github-actions
  e2e_tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15.1
        env:
          POSTGRES_PASSWORD: development
          POSTGRES_DB: cariere
        # Set health checks to wait until the DB has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Map TCP port 5432 on service container to the host
          - 5432:5432
    env:
      # Don't try to actually deliver e-mails in CI
      MAILER_DISABLE_EMAIL_SENDING: 1
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Set up Node.js and npm
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies using npm
        run: npm ci

      - name: Install dependencies for Playwright
        run: npx playwright install --with-deps

      - name: Build production version of the app
        run: npm run build

      - name: Run migrations to set up database
        run: npx prisma migrate deploy

      - name: Run end-to-end tests using Playwright
        run: npm run test:e2e
